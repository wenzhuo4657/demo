#========================基本配置# 应用名称spring.application.name=sharging-jdbc-demo# 开发环境设置spring.profiles.active=dev# 内存模式spring.shardingsphere.mode.type=Memory# 打印SQlspring.shardingsphere.props.sql-show=true#========================数据源配置# 配置真实数据源spring.shardingsphere.datasource.names=server-user,mysql-Order1,mysql-Order0# 配置第 1 个数据源spring.shardingsphere.datasource.server-user.type=com.zaxxer.hikari.HikariDataSourcespring.shardingsphere.datasource.server-user.driver-class-name=com.mysql.jdbc.Driverspring.shardingsphere.datasource.server-user.jdbc-url=jdbc:mysql://localhost:5037/db_userspring.shardingsphere.datasource.server-user.username=rootspring.shardingsphere.datasource.server-user.password=123456# 配置第 2 个数据源spring.shardingsphere.datasource.mysql-Order1.driver-class-name=com.mysql.jdbc.Driverspring.shardingsphere.datasource.mysql-Order1.jdbc-url=jdbc:mysql://localhost:5039/db_orderspring.shardingsphere.datasource.mysql-Order1.type=com.zaxxer.hikari.HikariDataSourcespring.shardingsphere.datasource.mysql-Order1.username=rootspring.shardingsphere.datasource.mysql-Order1.password=123456# 配置第 3 个数据源spring.shardingsphere.datasource.mysql-Order0.type=com.zaxxer.hikari.HikariDataSourcespring.shardingsphere.datasource.mysql-Order0.driver-class-name=com.mysql.jdbc.Driverspring.shardingsphere.datasource.mysql-Order0.jdbc-url=jdbc:mysql://localhost:5085/db_orderspring.shardingsphere.datasource.mysql-Order0.username=rootspring.shardingsphere.datasource.mysql-Order0.password=123456spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=server-user.t_userspring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=mysql-Order1.t_order0,mysql-Order1.t_order1,mysql-Order0.t_order0,mysql-Order0.t_order1#------------------------分库策略# 分片列名称spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id# 分片算法名称spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=alg_inline_userid#------------------------分片算法配置# 行表达式分片算法# 分片算法类型spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.type=INLINE# 分片算法属性配置spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.props.algorithm-expression=mysql-Order$->{user_id % 2}# 取模分片算法# 分片算法类型spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD# 分片算法属性配置spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2#------------------------分表策略# 分片列名称spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_no# 分片算法名称spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=alg_hash_mod#------------------------分片算法配置# 哈希取模分片算法# 分片算法类型spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=HASH_MOD# 分片算法属性配置spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2#------------------------分布式序列策略配置# 分布式序列列名称spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id# 分布式序列算法名称spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=alg_snowflake# 分布式序列算法配置# 分布式序列算法类型spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE# 分布式序列算法属性配置#spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.xxx=